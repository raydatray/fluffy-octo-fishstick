// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CoursesColumns holds the columns for the "courses" table.
	CoursesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "code", Type: field.TypeString, Unique: true},
	}
	// CoursesTable holds the schema information for the "courses" table.
	CoursesTable = &schema.Table{
		Name:       "courses",
		Columns:    CoursesColumns,
		PrimaryKey: []*schema.Column{CoursesColumns[0]},
	}
	// CourseSectionsColumns holds the columns for the "course_sections" table.
	CourseSectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "number", Type: field.TypeInt},
		{Name: "course_sections", Type: field.TypeInt},
	}
	// CourseSectionsTable holds the schema information for the "course_sections" table.
	CourseSectionsTable = &schema.Table{
		Name:       "course_sections",
		Columns:    CourseSectionsColumns,
		PrimaryKey: []*schema.Column{CourseSectionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "course_sections_courses_sections",
				Columns:    []*schema.Column{CourseSectionsColumns[2]},
				RefColumns: []*schema.Column{CoursesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// DiscussionBoardsColumns holds the columns for the "discussion_boards" table.
	DiscussionBoardsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "course_discussion_board", Type: field.TypeInt, Unique: true},
	}
	// DiscussionBoardsTable holds the schema information for the "discussion_boards" table.
	DiscussionBoardsTable = &schema.Table{
		Name:       "discussion_boards",
		Columns:    DiscussionBoardsColumns,
		PrimaryKey: []*schema.Column{DiscussionBoardsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "discussion_boards_courses_discussion_board",
				Columns:    []*schema.Column{DiscussionBoardsColumns[2]},
				RefColumns: []*schema.Column{CoursesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// PostsColumns holds the columns for the "posts" table.
	PostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "discussion_board_posts", Type: field.TypeInt},
		{Name: "user_posts", Type: field.TypeInt},
	}
	// PostsTable holds the schema information for the "posts" table.
	PostsTable = &schema.Table{
		Name:       "posts",
		Columns:    PostsColumns,
		PrimaryKey: []*schema.Column{PostsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "posts_discussion_boards_posts",
				Columns:    []*schema.Column{PostsColumns[3]},
				RefColumns: []*schema.Column{DiscussionBoardsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "posts_users_posts",
				Columns:    []*schema.Column{PostsColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// RepliesColumns holds the columns for the "replies" table.
	RepliesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "post_replies", Type: field.TypeInt},
		{Name: "user_replies", Type: field.TypeInt},
	}
	// RepliesTable holds the schema information for the "replies" table.
	RepliesTable = &schema.Table{
		Name:       "replies",
		Columns:    RepliesColumns,
		PrimaryKey: []*schema.Column{RepliesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "replies_posts_replies",
				Columns:    []*schema.Column{RepliesColumns[2]},
				RefColumns: []*schema.Column{PostsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "replies_users_replies",
				Columns:    []*schema.Column{RepliesColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "first_name", Type: field.TypeString},
		{Name: "middle_name", Type: field.TypeString, Nullable: true},
		{Name: "last_name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"PROFESSOR", "TA", "CA", "STUDENT"}, Default: "STUDENT"},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserTeachingSectionsColumns holds the columns for the "user_teaching_sections" table.
	UserTeachingSectionsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "course_section_id", Type: field.TypeInt},
	}
	// UserTeachingSectionsTable holds the schema information for the "user_teaching_sections" table.
	UserTeachingSectionsTable = &schema.Table{
		Name:       "user_teaching_sections",
		Columns:    UserTeachingSectionsColumns,
		PrimaryKey: []*schema.Column{UserTeachingSectionsColumns[0], UserTeachingSectionsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_teaching_sections_user_id",
				Columns:    []*schema.Column{UserTeachingSectionsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_teaching_sections_course_section_id",
				Columns:    []*schema.Column{UserTeachingSectionsColumns[1]},
				RefColumns: []*schema.Column{CourseSectionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserTeachingAssistantSectionsColumns holds the columns for the "user_teaching_assistant_sections" table.
	UserTeachingAssistantSectionsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "course_section_id", Type: field.TypeInt},
	}
	// UserTeachingAssistantSectionsTable holds the schema information for the "user_teaching_assistant_sections" table.
	UserTeachingAssistantSectionsTable = &schema.Table{
		Name:       "user_teaching_assistant_sections",
		Columns:    UserTeachingAssistantSectionsColumns,
		PrimaryKey: []*schema.Column{UserTeachingAssistantSectionsColumns[0], UserTeachingAssistantSectionsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_teaching_assistant_sections_user_id",
				Columns:    []*schema.Column{UserTeachingAssistantSectionsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_teaching_assistant_sections_course_section_id",
				Columns:    []*schema.Column{UserTeachingAssistantSectionsColumns[1]},
				RefColumns: []*schema.Column{CourseSectionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserCourseAssistantSectionsColumns holds the columns for the "user_course_assistant_sections" table.
	UserCourseAssistantSectionsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "course_section_id", Type: field.TypeInt},
	}
	// UserCourseAssistantSectionsTable holds the schema information for the "user_course_assistant_sections" table.
	UserCourseAssistantSectionsTable = &schema.Table{
		Name:       "user_course_assistant_sections",
		Columns:    UserCourseAssistantSectionsColumns,
		PrimaryKey: []*schema.Column{UserCourseAssistantSectionsColumns[0], UserCourseAssistantSectionsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_course_assistant_sections_user_id",
				Columns:    []*schema.Column{UserCourseAssistantSectionsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_course_assistant_sections_course_section_id",
				Columns:    []*schema.Column{UserCourseAssistantSectionsColumns[1]},
				RefColumns: []*schema.Column{CourseSectionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserEnrolledSectionsColumns holds the columns for the "user_enrolled_sections" table.
	UserEnrolledSectionsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "course_section_id", Type: field.TypeInt},
	}
	// UserEnrolledSectionsTable holds the schema information for the "user_enrolled_sections" table.
	UserEnrolledSectionsTable = &schema.Table{
		Name:       "user_enrolled_sections",
		Columns:    UserEnrolledSectionsColumns,
		PrimaryKey: []*schema.Column{UserEnrolledSectionsColumns[0], UserEnrolledSectionsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_enrolled_sections_user_id",
				Columns:    []*schema.Column{UserEnrolledSectionsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_enrolled_sections_course_section_id",
				Columns:    []*schema.Column{UserEnrolledSectionsColumns[1]},
				RefColumns: []*schema.Column{CourseSectionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CoursesTable,
		CourseSectionsTable,
		DiscussionBoardsTable,
		PostsTable,
		RepliesTable,
		UsersTable,
		UserTeachingSectionsTable,
		UserTeachingAssistantSectionsTable,
		UserCourseAssistantSectionsTable,
		UserEnrolledSectionsTable,
	}
)

func init() {
	CourseSectionsTable.ForeignKeys[0].RefTable = CoursesTable
	DiscussionBoardsTable.ForeignKeys[0].RefTable = CoursesTable
	PostsTable.ForeignKeys[0].RefTable = DiscussionBoardsTable
	PostsTable.ForeignKeys[1].RefTable = UsersTable
	RepliesTable.ForeignKeys[0].RefTable = PostsTable
	RepliesTable.ForeignKeys[1].RefTable = UsersTable
	UserTeachingSectionsTable.ForeignKeys[0].RefTable = UsersTable
	UserTeachingSectionsTable.ForeignKeys[1].RefTable = CourseSectionsTable
	UserTeachingAssistantSectionsTable.ForeignKeys[0].RefTable = UsersTable
	UserTeachingAssistantSectionsTable.ForeignKeys[1].RefTable = CourseSectionsTable
	UserCourseAssistantSectionsTable.ForeignKeys[0].RefTable = UsersTable
	UserCourseAssistantSectionsTable.ForeignKeys[1].RefTable = CourseSectionsTable
	UserEnrolledSectionsTable.ForeignKeys[0].RefTable = UsersTable
	UserEnrolledSectionsTable.ForeignKeys[1].RefTable = CourseSectionsTable
}
