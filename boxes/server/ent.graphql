directive @goField(
    forceResolver: Boolean
    name: String
    omittable: Boolean
) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(
    model: String
    models: [String!]
    forceGenerate: Boolean
) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
type Course implements Node {
    id: ID!
    code: String!
    discussionBoard: DiscussionBoard
    sections: [CourseSection!]
}
type CourseSection implements Node {
    id: ID!
    number: Int!
    course: Course!
    professors: [User!]!
    teachingAssistants: [User!]
    courseAssistants: [User!]
    students: [User!]
}
"""
CreateUserInput is used for create User object.
Input was generated by ent.
"""
input CreateUserInput {
    firstName: String!
    middleName: String
    lastName: String!
    email: String!
    password: String!
    role: UserRole
    postIDs: [ID!]
    replyIDs: [ID!]
    teachingSectionIDs: [ID!]
    teachingAssistantSectionIDs: [ID!]
    courseAssistantSectionIDs: [ID!]
    enrolledSectionIDs: [ID!]
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type DiscussionBoard implements Node {
    id: ID!
    name: String!
    posts: [Post!]
    course: Course!
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node
    @goModel(
        model: "github.com/raydatray/fluffy-octo-fishstick/boxes/server/ent.Noder"
    ) {
    """
    The id of the object.
    """
    id: ID!
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
    """
    Specifies an ascending order for a given `orderBy` argument.
    """
    ASC
    """
    Specifies a descending order for a given `orderBy` argument.
    """
    DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
    """
    When paginating forwards, are there more items?
    """
    hasNextPage: Boolean!
    """
    When paginating backwards, are there more items?
    """
    hasPreviousPage: Boolean!
    """
    When paginating backwards, the cursor to continue.
    """
    startCursor: Cursor
    """
    When paginating forwards, the cursor to continue.
    """
    endCursor: Cursor
}
type Post implements Node {
    id: ID!
    title: String!
    content: String!
    author: User!
    board: DiscussionBoard!
    replies: [Reply!]
}
type Query {
    """
    Fetches an object given its ID.
    """
    node(
        """
        ID of the object.
        """
        id: ID!
    ): Node
    """
    Lookup nodes by a list of IDs.
    """
    nodes(
        """
        The list of node IDs.
        """
        ids: [ID!]!
    ): [Node]!
    users: [User!]!
}
type Reply implements Node {
    id: ID!
    content: String!
    author: User!
    post: Post!
}
"""
UpdateUserInput is used for update User object.
Input was generated by ent.
"""
input UpdateUserInput {
    firstName: String
    middleName: String
    clearMiddleName: Boolean
    lastName: String
    email: String
    password: String
    role: UserRole
    addPostIDs: [ID!]
    removePostIDs: [ID!]
    clearPosts: Boolean
    addReplyIDs: [ID!]
    removeReplyIDs: [ID!]
    clearReplies: Boolean
    addTeachingSectionIDs: [ID!]
    removeTeachingSectionIDs: [ID!]
    clearTeachingSections: Boolean
    addTeachingAssistantSectionIDs: [ID!]
    removeTeachingAssistantSectionIDs: [ID!]
    clearTeachingAssistantSections: Boolean
    addCourseAssistantSectionIDs: [ID!]
    removeCourseAssistantSectionIDs: [ID!]
    clearCourseAssistantSections: Boolean
    addEnrolledSectionIDs: [ID!]
    removeEnrolledSectionIDs: [ID!]
    clearEnrolledSections: Boolean
}
type User implements Node {
    id: ID!
    firstName: String!
    middleName: String
    lastName: String!
    email: String!
    password: String!
    role: UserRole!
    posts: [Post!]
    replies: [Reply!]
    teachingSections: [CourseSection!]
    teachingAssistantSections: [CourseSection!]
    courseAssistantSections: [CourseSection!]
    enrolledSections: [CourseSection!]
}
"""
UserRole is enum for the field role
"""
enum UserRole
    @goModel(
        model: "github.com/raydatray/fluffy-octo-fishstick/boxes/server/ent/user.Role"
    ) {
    PROFESSOR
    TA
    CA
    STUDENT
}
